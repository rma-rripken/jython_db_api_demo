# One way to enable these options is to add 
#  -Djava.util.logging.config.file = java/dev/src/com/rma/rowcps/logging/logging.properties
# to the command line (or run configuration in eclipse).
# The handlers are a comma separated list of outputs, you can add a file or database output
handlers = java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Configure ConsoleHandler to use rma CustomFormatter. The default java.util.logging
# formatter outputs log messages across two lines and, generally, isn't very
# pretty.
java.util.logging.ConsoleHandler.formatter = rma.util.logging.StackFilteringFormatter
java.util.logging.ConsoleHandle.level = ALL

rma.util.logging.StackFilteringFormatter.stackignore = org.python.netty.util.internal.logging.Slf4JLogger

# The following special tokens can be used in the FileHandler pattern property
# which specifies the location and name of the log file.
#   / - standard path separator
#   %t - system temporary directory
#   %h - value of the user.home system property
#   %g - generation number for rotating logs
#   %u - unique number to avoid conflicts
# FileHandler writes to %h/demo0.log by default.
java.util.logging.FileHandler.pattern = %t/radarapi_demo_logging_%g.log
java.util.logging.FileHandler.formatter = rma.util.logging.StackFilteringFormatter
java.util.logging.FileHandler.level = ALL

.level = FINE
org.python.netty.level = WARNING
sun.awt.windows.level = WARNING
rma.util.lookup.level = WARNING
usace.metrics.services.level = WARNING
okhttp3.level = WARNING
mil.army.usace.hec.cwms.http.client.level = WARNING
mil.army.usace.hec.metadata.level = WARNING
hec.db.util.level = WARNING
